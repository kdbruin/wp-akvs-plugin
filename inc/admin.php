<?php
class HBAdmin extends HBPlugin
{

	protected function init()
	{
		register_activation_hook( $this->_config->plugin_file, array( 
			$this, 
			'activate' 
		) );
		
		// plugin settings
		$this->add_action( 'admin_menu' );
		$this->add_action( 'admin_init' );
		
		// filters
		$this->add_filter( 'image_send_to_editor', 'image_send_to_editor', 20, 8 );
	}

	public function activate()
	{
		// set defaults
		$defaults = array( 
			'ga_enabled' => false, 
			'ga_user_id' => '', 
			'ga_url' => '' 
		);
		update_option( 'plugin_options', $defaults );
	}

	public function admin_menu()
	{
		// options page
		add_options_page( 'Halfje-Bruin Plugin Settings Page', 'Halfje-Bruin Plugin Settings', 'administrator', $this->_config->plugin_file, array( 
			$this, 
			'add_options_page' 
		) );
	}

	public function add_options_page()
	{
		?>
<div class="wrap">
	<div class="icon32" id="icon-options-general">
		<br>
	</div>
	<h2>Halfje-Bruin Plugin Instellingen</h2>
	Instellingen voor de Halfje-Bruin Plugin.
	<form action="options.php" method="post">
	                                <?php settings_fields('plugin_options'); ?>
	                                <?php do_settings_sections($this->_config->plugin_file); ?>
	                                <p class="submit">
			<input name="Submit" type="submit" class="button-primary"
				value="<?php esc_attr_e('Save Changes'); ?>" />
		</p>
	</form>
</div>
<?php
	}

	public function admin_init()
	{
		register_setting( 'plugin_options', 'plugin_options', array( 
			$this, 
			'plugin_options_validate' 
		) );
		add_settings_section( 'ga_section', 'Google Analytics', array( 
			$this, 
			'section_text' 
		), $this->_config->plugin_file );
		add_settings_field( $this->plugin_check_field( 'ga_enabled' ), 'Enable Google Analytics', array( 
			$this, 
			$this->plugin_check_function( 'ga_enabled' ) 
		), $this->_config->plugin_file, 'ga_section' );
		add_settings_field( $this->plugin_text_field( 'ga_user_id' ), 'GA User ID', array( 
			$this, 
			$this->plugin_text_function( 'ga_user_id' ) 
		), $this->_config->plugin_file, 'ga_section' );
		add_settings_field( $this->plugin_text_field( 'ga_url' ), 'GA Site URL', array( 
			$this, 
			$this->plugin_text_function( 'ga_url' ) 
		), $this->_config->plugin_file, 'ga_section' );
	}

	public function plugin_options_validate( $input )
	{
		return $input;
	}

	public function section_text()
	{
		return;
	}

	public function setting_chk_ga_enabled()
	{
		$options = get_option( 'plugin_options' );
		if ( is_array( $options ) && $options[ 'ga_enabled' ] )
		{
			$checked = ' checked="checked"';
		}
		echo "<input type='checkbox'" . $checked . " name='plugin_options[ga_enabled]' id='" . $this->plugin_check_field( 'ga_enabled' ) . "' />";
	}

	public function setting_txt_ga_user_id()
	{
		echo "<input type='text' name='plugin_options[ga_user_id]' id='" . $this->plugin_text_field( 'ga_user_id' ) . "' value='" . get_option( 'ga_user_id' ) . "' />";
	}

	public function setting_txt_ga_url()
	{
		echo "<input type='text' name='plugin_options[ga_url]' id='" . $this->plugin_text_field( 'ga_url' ) . "' value='" . get_option( 'ga_url' ) . "' />";
	}

	private function plugin_check_field( $var )
	{
		return 'plugin_chk_' . $var;
	}

	private function plugin_check_function( $var )
	{
		return 'setting_chk_' . $var;
	}

	private function plugin_text_field( $var )
	{
		return 'plugin_txt_' . $var;
	}

	private function plugin_text_function( $var )
	{
		return 'setting_txt_' . $var;
	}

	/**
	 * Replace the HTML code with a shortcode with the same parameters so the image code is
	 * generated by the_content().
	 *
	 * @param $html string
	 *        	generated HTML for the inserted image
	 * @param $id int
	 *        	image ID
	 * @param $caption string
	 *        	caption for the image
	 * @param $title string
	 *        	title for the image
	 * @param $align string
	 *        	image alignment
	 * @param $url string
	 *        	source URL of the image
	 * @param $size string
	 *        	size for the inserted image
	 * @param $alt string
	 *        	alt text for the image
	 * @return formatted shortcode
	 */
	function image_send_to_editor( $html, $id, $caption, $title, $align, $url, $size, $alt )
	{
		$result = '[hb-image id="' . $id . '" size="' . $size . '" align="' . $align . '"';
		if ( !empty( $caption ) )
		{
			$result = $result . ' caption="' . $caption . '"';
		}
		if ( !empty( $title ) )
		{
			$result = $result . ' title="' . $title . '"';
		}
		if ( !empty( $alt ) )
		{
			$result = $result . ' alt="' . $alt . '"';
		}
		$result = $result . ']';
		return $result;
	}
}
